name: Build & Deploy

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Clean Previous Build Artifacts
        run: |
          rm -f frontend.tar.gz backend.tar.gz || true

      - name: Build Frontend
        env:
          REACT_APP_STRIPE_PUBLIC_KEY: ${{ secrets.REACT_APP_STRIPE_PUBLIC_KEY }}
          REACT_APP_GOOGLE_CLIENT_ID: ${{ secrets.REACT_APP_GOOGLE_CLIENT_ID }}
        run: |
          cd frontend
          rm -rf build/ node_modules/.cache/ || true
          npm install --omit=dev
          npm run build

          # Validate manifest exists
          if [ ! -f build/manifest.json ]; then
            echo "Error: manifest.json missing after build." >&2
            exit 1
          fi

          tar -czf ../frontend.tar.gz -C build .

      - name: Build Backend
        run: |
          cd backend
          rm -rf dist/ node_modules/.cache/ || true
          npm install --omit=dev
          npm install -g @nestjs/cli
          npm run build
          tar -czf ../backend.tar.gz dist package.json package-lock.json node_modules .

      - name: Upload Frontend Archive
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.FRONTEND_HOST }}
          username: ${{ secrets.FRONTEND_USER }}
          key: ${{ secrets.FRONTEND_SSH_KEY }}
          source: "frontend.tar.gz"
          target: ${{ secrets.FRONTEND_TARGET }}

      - name: Clean and Extract Frontend Archive
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.FRONTEND_HOST }}
          username: ${{ secrets.FRONTEND_USER }}
          key: ${{ secrets.FRONTEND_SSH_KEY }}
          script: |
            cd "${{ secrets.FRONTEND_TARGET }}"
            echo "Removing old static assets..."
            rm -rf static/ *.js *.js.map *.chunk.js *.css *.css.map *.gz *.ico *.json || true
            echo "Extracting new frontend archive..."
            tar -xzf frontend.tar.gz
            rm frontend.tar.gz
            echo "Frontend deployed successfully."

      - name: Upload Backend Archive
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.BACKEND_HOST }}
          username: ${{ secrets.BACKEND_USER }}
          key: ${{ secrets.BACKEND_SSH_KEY }}
          source: "backend.tar.gz"
          target: ${{ secrets.BACKEND_TARGET }}

      - name: Clean, Extract Backend Archive and Restart PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BACKEND_HOST }}
          username: ${{ secrets.BACKEND_USER }}
          key: ${{ secrets.BACKEND_SSH_KEY }}
          script: |
            cd "${{ secrets.BACKEND_TARGET }}"
            pm2 stop 0 || echo "PM2 not running."
            find . -mindepth 1 \
              -not -name "backend.tar.gz" \
              -not -name ".env*" \
              -not -name "ecosystem.config.js" \
              -delete
            tar -xzf backend.tar.gz
            rm backend.tar.gz
            npm install pm2 -g
            pm2 start 0
            echo "Backend deployed and restarted."
